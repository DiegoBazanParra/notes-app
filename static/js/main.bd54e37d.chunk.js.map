{"version":3,"sources":["Components/Color.js","Components/AddNote.js","Components/Note.js","Components/NoteList.js","Components/Search.js","Assets/img/logo.svg","Components/Header.js","App.js","index.js"],"names":["Color","addNotes","useState","listOpen","setListOpen","className","onClick","size","map","item","index","style","backgroundColor","AddNote","handleAddNote","characterLimit","noteText","setNoteText","value","onChange","e","word","target","length","cols","rows","placeholder","trim","Note","id","color","text","date","handleDeleteNote","updateText","defaultValue","maxLength","NoteList","notes","note","Search","handleSearchNote","type","Header","handleToggleDarkMode","theme","src","logo","alt","previousDarkMode","App","ListNotes","nanoid","setNotes","searchText","setSearchText","darkMode","setDarkMode","displayNotes","filter","toLowerCase","includes","useEffect","saveNotes","JSON","parse","localStorage","getItem","setItem","stringify","tempNotes","Date","push","toLocaleDateString","newNote","newNotes","findIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd54e37d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { MdColorLens } from \"react-icons/md\";\r\n\r\nfunction Color({ addNotes }) {\r\n  const colors = [\r\n    \"#fe9b72\",\r\n    \"#fec971\",\r\n    \" #00d4fe\",\r\n    \"#b693fd\",\r\n    \"#e4ee91\",\r\n    \"#fe7272\",\r\n    \"#72b3fe\",\r\n  ];\r\n\r\n  const [listOpen, setListOpen] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"note-color\" onClick={() => setListOpen(!listOpen)}>\r\n        <MdColorLens className=\"color-icon\" size=\"1.3em\" />\r\n      </div>\r\n      <div className={`note-list-colors ${listOpen ? \"active\" : \"\"}`}>\r\n        <h3>Lista de Colores</h3>\r\n        <ul>\r\n          {colors.map((item, index) => (\r\n            <li\r\n              key={index}\r\n              className=\"note-list-color\"\r\n              style={{ backgroundColor: item }}\r\n              onClick={() => addNotes(item)}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Color;\r\n","import React, { useState } from \"react\";\r\nimport Color from \"./Color\";\r\n\r\nfunction AddNote({ handleAddNote, addNotes, characterLimit }) {\r\n  const [noteText, setNoteText] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const word = e.target.value;\r\n    if (characterLimit - word.length >= 0) {\r\n      setNoteText(word);\r\n    }\r\n  };\r\n  const handleSaveClick = () => {\r\n    if (noteText.trim().length > 0) {\r\n      handleAddNote(noteText);\r\n      setNoteText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"note new\">\r\n      <Color addNotes={addNotes} />\r\n      <textarea\r\n        value={noteText}\r\n        onChange={handleChange}\r\n        cols=\"10\"\r\n        rows=\"8\"\r\n        placeholder=\"Escribe Aquí tu Nueva Nota...\"\r\n      />\r\n      <div className=\"note-save\">\r\n        <small>{characterLimit - noteText.length} Restantes</small>\r\n        <button onClick={handleSaveClick} className=\"save\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNote;\r\n","import React from \"react\";\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\n\r\nfunction Note({\r\n  id,\r\n  color,\r\n  text,\r\n  date,\r\n  handleDeleteNote,\r\n  updateText,\r\n  characterLimit,\r\n}) {\r\n  const handleChange = (e) => {\r\n    const word = e.target.value;\r\n    if (characterLimit - word.length >= 0) {\r\n      updateText(word, id);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"note\" key={id} style={{ backgroundColor: color }}>\r\n      <textarea\r\n        className=\"note-text\"\r\n        defaultValue={text}\r\n        maxLength={characterLimit}\r\n        cols=\"4\"\r\n        rows=\"9\"\r\n        onChange={handleChange}\r\n        placeholder=\"Escribe Aquí...\"\r\n      />\r\n      <div className=\"note-footer\">\r\n        <div className=\"note-words\">\r\n          <p>{characterLimit - text.length} Restantes</p>\r\n        </div>\r\n        <div className=\"note-date\">\r\n          <p>{date}</p>\r\n          <MdDeleteForever\r\n            className=\"delete-icon\"\r\n            size=\"1.3em\"\r\n            onClick={() => handleDeleteNote(id)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import \"Styles/Note.css\";\r\nimport React from \"react\";\r\nimport AddNote from \"./AddNote\";\r\nimport Note from \"./Note\";\r\n\r\nfunction NoteList({\r\n  notes,\r\n  addNotes,\r\n  handleAddNote,\r\n  handleDeleteNote,\r\n  updateText,\r\n  characterLimit,\r\n}) {\r\n  return (\r\n    <div className=\"notes-list\">\r\n      {notes.map((note) => (\r\n        <Note\r\n          handleDeleteNote={handleDeleteNote}\r\n          updateText={updateText}\r\n          handleAddNote={handleAddNote}\r\n          characterLimit={characterLimit}\r\n          id={note.id}\r\n          color={note.color}\r\n          text={note.text}\r\n          date={note.date}\r\n          key={note.id}\r\n        />\r\n      ))}\r\n      <AddNote\r\n        handleAddNote={handleAddNote}\r\n        addNotes={addNotes}\r\n        characterLimit={characterLimit}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteList;\r\n","import React from \"react\";\r\nimport { MdSearch } from \"react-icons/md\";\r\n\r\nfunction Search({ handleSearchNote }) {\r\n  const handleSearch = (e) => {\r\n    const word = e.target.value;\r\n    handleSearchNote(word);\r\n  };\r\n  return (\r\n    <div className=\"search\">\r\n      <MdSearch className=\"search-icons\" size=\"1.3em\" />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Busca tu Nota Aquí...\"\r\n        onChange={handleSearch}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"Styles/Header.css\";\r\nimport React from \"react\";\r\nimport logo from \"Assets/img/logo.svg\";\r\n\r\nfunction Header({ handleToggleDarkMode, theme }) {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-container\">\r\n        <div className=\"logo\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h3>Notes App</h3>\r\n        </div>\r\n        <button\r\n          onClick={() =>\r\n            handleToggleDarkMode((previousDarkMode) => !previousDarkMode)\r\n          }\r\n          className=\"save\"\r\n        >\r\n          {theme ? \"Modo Oscuro\" : \"Modo Claro\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"Styles/Global.css\";\n\nimport NoteList from \"./Components/NoteList\";\nimport { useEffect, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Search from \"./Components/Search\";\nimport Header from \"Components/Header\";\nfunction App() {\n  const ListNotes = [\n    {\n      id: nanoid(),\n      text: \"\",\n      color: \"#fe9b72\",\n      date: \"14/11/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"\",\n      color: \"#fec971\",\n      date: \"14/11/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"\",\n      color: \"#00d4fe\",\n      date: \"14/11/2021\",\n    },\n  ];\n  const [notes, setNotes] = useState(ListNotes);\n  const [searchText, setSearchText] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      color: \"\",\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const addNotes = (color) => {\n    const tempNotes = [...notes];\n    const date = new Date();\n\n    tempNotes.push({\n      id: nanoid(),\n      text: \"\",\n      date: date.toLocaleDateString(),\n      color,\n    });\n    setNotes(tempNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  const displayNotes = notes.filter((note) =>\n    note.text.toLowerCase().includes(searchText)\n  );\n\n  useEffect(() => {\n    const saveNotes = JSON.parse(localStorage.getItem(\"react-notes-app\"));\n    if (saveNotes) {\n      setNotes(saveNotes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"react-notes-app\", JSON.stringify(notes));\n  }, [notes]);\n\n  const updateText = (text, id) => {\n    const tempNotes = [...notes];\n\n    const index = tempNotes.findIndex((item) => item.id === id);\n    if (index < 0) return;\n    tempNotes[index].text = text;\n    setNotes(tempNotes);\n  };\n  const characterLimit = 200;\n\n  return (\n    <div className={darkMode ? \"dark-mode\" : \"App\"}>\n      <Header handleToggleDarkMode={setDarkMode} theme={darkMode} />\n      <div className=\"container\">\n        <Search handleSearchNote={setSearchText} />\n        <NoteList\n          notes={displayNotes}\n          addNotes={addNotes}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n          updateText={updateText}\n          characterLimit={characterLimit}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}